server {
    listen 80;
    server_name j12b206.p.ssafy.io;

    location / {
        proxy_pass http://reactnative:8081/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /hot {
        proxy_pass http://reactnative:8081/hot;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /message {
        proxy_pass http://reactnative:8081/message;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}


# server {
#     listen 80;
#     server_name j12b206.p.ssafy.io;

#     # expo export로 생성된 정적 파일 위치 (예시: /var/www/expo/web-build)
#     root /var/www/expo/web-build;

#     # FastAPI 백엔드 reverse proxy 설정 (예: /api 경로)
#     location /api/ {
#         proxy_pass http://fastapi:8000/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }
# }

# 정적 파일 서빙:
# expo export로 만들어진 정적 파일들이 /var/www/expo/web-build 폴더에 저장되어 있습니다. 사용자가 기본 경로(예를 들어, 도메인 주소)를 요청하면 nginx가 이 폴더 안에서 해당 파일을 찾아서 클라이언트에게 전달합니다.
# 백엔드 API 프록시:
# 만약 클라이언트가 /api/로 시작하는 URL로 요청을 보낸다면, 이 요청은 내부의 FastAPI 서버(포트 8000)로 전달됩니다.
# proxy_pass http://fastapi:8000/; 명령은 해당 요청을 FastAPI 서버로 넘깁니다.
# 그리고 proxy_set_header 옵션들은 원래 요청의 호스트명과 클라이언트의 IP 정보를 FastAPI 서버에 전달하여, 백엔드에서 이를 확인할 수 있게 합니다.
# 즉, 이 설정은 프론트엔드 정적 파일과 백엔드 API 서버를 하나의 도메인에서 함께 운영할 수 있도록 도와줍니다.